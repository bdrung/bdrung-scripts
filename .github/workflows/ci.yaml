---
name: CI

on:  # yamllint disable-line rule:truthy
  - push
  - pull_request

env:
  DEBIAN_FRONTEND: noninteractive

# Note: ca-certificates and git are needed for actions/checkout to use git
# which is needed for codecov/codecov-action.

jobs:
  unittest:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        container:
          - debian:bookworm-slim
          - debian:unstable-slim
    container:
      image: ${{ matrix.container }}
    steps:
      - name: Install dependencies
        run: >
          apt-get update &&
          apt-get install --no-install-recommends --yes
          black ca-certificates git isort mypy pylint python3 python3-flake8
          python3-jinja2 python3-pil python3-publicsuffix2 python3-pygit2
          python3-pytest python3-pytest-cov python3-typeshed python3-unidiff
          python3-yaml shellcheck
      - uses: actions/checkout@v4
      - name: Run unit tests
        run: python3 -m pytest -ra --cov=. --cov-branch --cov-report=xml tests/
      - name: Install additional dependencies for Codecov
        run: apt-get install --no-install-recommends --yes curl gpg gpg-agent
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          files: ./coverage.xml

  python-unittest:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    container:
      image: debian:unstable-slim
    steps:
      - name: Install dependencies
        run: >
          apt-get update &&
          apt-get install --no-install-recommends --yes
          black ca-certificates git isort mypy pylint python3 python3-coverage
          python3-flake8 python3-jinja2 python3-pil python3-publicsuffix2
          python3-pygit2 python3-typeshed python3-unidiff python3-yaml
          shellcheck
      - uses: actions/checkout@v4
      - name: Run unit tests
        run: |
          python3 -m coverage run --branch -m unittest discover -v
          python3 -m coverage xml
      - name: Install additional dependencies for Codecov
        run: apt-get install --no-install-recommends --yes curl gpg gpg-agent
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          files: ./coverage.xml
